핵심 개념
1. 큰 숫자가 앞자리에 올수록 두 수의 곱이 커집니다.

2. 두 수의 자릿수가 최대한 비슷할 때 곱이 최대가 됩니다.

풀이 과정

    1. 먼저 숫자 배열을 내림차순으로 정렬하여 큰 숫자가 앞에 오도록 합니다.
    numbers.sort((a,b) => b-a)

    2. 숫자를 두 개씩 꺼냅니다. 
    숫자의 갯수가 홀수인 경우를 위해 삼항연산자를 활용해 예외처리를 해주었습니다.
    numbers[i + 1]이 존재하지 않는 경우(i가 맨 마지막 인덱스) 빈 문자열("")을 할당하여 오류를 방지하였습니다.
    let a : String = String(numbers[i])
    let b : String = numbers[i + 1] !== undefined ? String(numbers[i + 1]) : "";

    3. 숫자를 차례대로 두 개씩 묶어가며, 어느 조합이 더 큰 곱을 만드는지 비교하여 배치합니다.
    if(Number(String(firstNum)+a) * Number(String(secondNum)+b) >= Number(String(firstNum)+b) * Number(String(secondNum)+a)){
        firstNum = Number(String(firstNum)+a)
        secondNum = Number(String(secondNum)+b)
    }else{
        firstNum = Number(String(firstNum)+b)
        secondNum = Number(String(secondNum)+a)
    }



